<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
       xmlns:util="http://www.springframework.org/schema/util"  
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  
       xsi:schemaLocation="  
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd  
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
       
      

    <!-- 缓存管理器 使用Ehcache实现-->  
    <bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml"/>  
    </bean>  
       
       <!--shiro session 管理 -->
       <bean id="sessionIdGenerator" class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator"/>
       
       <!-- 会话Cookie模板 -->
	    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
	        <constructor-arg value="sid"/>
	        <property name="httpOnly" value="true"/>
	        <property name="maxAge" value="-1"/>
	    </bean>
       
       
       <!--md5加密  -->
       <bean id="passwordMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/><!-- 指定hash算法为MD5； -->
        <property name="hashIterations" value="16"/><!-- 指定散列次数为16次 -->
        <property name="storedCredentialsHexEncoded" value="true"/><!-- 指定Hash散列值使用Hex加密存储。value="false"表明hash散列值用用Base64-encoded存储。 -->  
    </bean>
       
       <!-- 自定义Realm -->
	<bean id="shiroDbRealm" class="com.cmp.res.shiro.ShiroDBRealm">
		<property name="credentialsMatcher" ref="passwordMatcher"></property> 
	</bean>
	
	<!-- 会话DAO -->
    <!-- <bean id="sessionDAO" class="org.apache.shiro.session.mgt.eis.MemorySessionDAO">
        <property name="sessionIdGenerator" ref="sessionIdGenerator"/>
    </bean> -->
    <bean id="sessionDAO"
		class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">
		<property name="activeSessionsCacheName" value="shiroCache2" />
		<property name="sessionIdGenerator" ref="sessionIdGenerator" />
	</bean>
	
	<!-- 会话验证调度器 -->
    <bean id="sessionValidationScheduler" class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">
        <property name="sessionValidationInterval" value="1800000"/>
        <property name="sessionManager" ref="sessionManager"/>
    </bean>
	
	<!-- 会话管理器 -->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="globalSessionTimeout" value="1800000"/>
        <property name="deleteInvalidSessions" value="true"/>
        <property name="sessionValidationSchedulerEnabled" value="true"/>
        <property name="sessionValidationScheduler" ref="sessionValidationScheduler"/>
        <property name="sessionDAO" ref="sessionDAO"/>
        <property name="sessionIdCookieEnabled" value="true"/>
        <property name="sessionIdCookie" ref="sessionIdCookie"/>
    </bean>
	
	<!--安全管理器  -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">  
        <property name="realm" ref="shiroDbRealm"/>  
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean> 
    
    <!-- 基于Form表单的身份验证过滤器 -->
    <bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
        <property name="usernameParam" value="userName"/>
        <property name="passwordParam" value="password"/>
        <!-- <property name="rememberMeParam" value="rememberMe"/> -->
        <property name="loginUrl" value="/login"/>
    </bean>	 	
	
	
	<!-- Shiro Filter -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login" />
		<property name="successUrl" value="/" />
		<property name="unauthorizedUrl" value="/unauthorized" />
		<property name="filters">
            <util:map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </util:map>
        </property>
		<property name="filterChainDefinitions">
			<value>
				<!-- /login = authc -->
				/static/**=anon
				/testform.jsp=anon
				/test/**=anon
				/logout = logout
				/** = authc
				
				
			</value>
		</property>
	</bean>
       
       
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>  
       